/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loginandsignup;

import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author RC_Student_lab
 */
public class Userinfo extends javax.swing.JFrame {
    
    /**
     * Creates new form Userinfo
     */
    public Userinfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Userinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Userinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Userinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Userinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Userinfo().setVisible(true);
            }
        });
    }

    private static class Login {

        public Login() {
        }

        private boolean loginUser() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }

    private static class Task {

        public Task() {
        }

        private Object printTaskDetails() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }


class UserInfo {
    // declaring my variables
    private static int NumberOfTask;
    private static String TaskName;
    public static int TaskNumber;
    private static String Discription;
    private static String DeveloperNames;
    private static int Duration;
    private static int ID;
    private static String Status;
    static int duration = 0;
  
    // geeting inputs from the user
    Scanner input = new Scanner(System.in);
    public static void setNumberOfTask(){
        NumberOfTask = Integer.parseInt(JOptionPane.showInputDialog("Enter number of task you wish to perform"));
    }
    public static int getNumberOfTask(){
        return NumberOfTask;
    }
    public static void setTaskName(){
        
        TaskName = JOptionPane.showInputDialog("Enter Task Name");
        
    }
    public static String getTaskName(){
        return TaskName;
    }
    
    public static void setTaskNumber(int x){
          TaskNumber = x;
    }
    public static int getTaskNumber(){
        return TaskNumber;
    }
    
    public static void setDiscription(){
        
        Discription = JOptionPane.showInputDialog("Enter Task Discription");
        
    }
    public static String getDiscription(){
        return Discription;
    }
    public static void setDeveloperNames(){
        
        DeveloperNames = JOptionPane.showInputDialog("Enter DeveloperNames");
        
    }
    public static String getDeveloperNames(){
        return DeveloperNames;
    }
    
    public static void setDuration(){
        
        Duration = Integer.parseInt(JOptionPane.showInputDialog("Enter Task Duration"));
        
    }
    public static int getDuration(){
        return Duration;
    }
    
     public static void setStatus(){
         //creating option and organising the task that needs to be done
        
        Status = JOptionPane.showInputDialog("""
                                             Choose task status 
                                             To DO
                                             Doing
                                             Done""");
        
    }
    public static String getStatus(){
        return Status;
    }
    // this will work only if the user is succesfully logged in
    public static void WelcomeNote(){
    int option;
    int end = 0;
      Login log = new Login();
      Task obj = new Task();
      
      if(log.loginUser()){
          
          do{
              
               option = Integer.parseInt(JOptionPane.showInputDialog("""
                                                                     Welcome to EasyKanban
                                                                     Please select an option 
                                                                     1. Add task 
                                                                     2. Show report 
                                                                     3. Quit """));
         
              
              switch (option) {
                  case 1 -> {
                      setNumberOfTask();
                      for(int count= 0; count<getNumberOfTask(); count++){
                          //TaskNumber = count;
                          setStatus();
                          setTaskNumber(count);
                          setTaskName();
                          setDiscription();
                          setDuration();
                          setDeveloperNames();
                          
                          duration = duration+ getDuration();
                          JOptionPane.showMessageDialog(null, obj.printTaskDetails());
                      }     JOptionPane.showMessageDialog(null, "These tasks will take " + duration + " to implement");
                  }
                  case 2 -> JOptionPane.showMessageDialog(null,"Coming soon");
                  case 3 -> end= 3;
                  default -> {
                  }
              }
          
      }while(end != 3);
    }
    }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
